@model List<Product>


<div class="card shadow border-o mt-4">
    <div class="card-header bg-secondary bg-gradient ml-0 py-3">
        <div class="row">
            <div class="col-6 text-start">
                <h2 class="text-white py-2">Product List</h2>
            </div>
            <div class="col-6 text-end fs-5">
                <input name="searchString" id="myInput" type="text" placeholder="Product.. 🔍" />
                @* <form asp-controller="Product" asp-action="Index">
                    <input name="searchString" type="search" placeholder="Search Product"/>
                    <button  class="btn btn-outline-dark fs-5 btn-primary" type="submit">Search 🔍</button>
                </form>  *@
            </div>
        </div>
    </div>
    <div class="card-body p-4">
        <div class="container">
            <div class="col-12  text-end">
                <a class="btn btn-primary" asp-controller="Product" asp-action="UpsertProduct">
                    ➕ Create New Product
                </a>
            </div>
            <table id="myTable" class="table table-border table-striped">
                <thead>
                    <tr>
                        <th class="sortable" data-sort="0">
                            Product Name  🔃
                        </th>
                        <th>
                            ISBN
                        </th>
                        <th>
                            Author
                        </th>
                        <th class="sortable" >
                            Price
                        </th>
                        <th class="sortable" >Category</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody id="myTable">
                    @foreach (var obj in Model)
                    {
                        <tr>
                            <td>@obj.Title</td>
                            <td>@obj.ISBN</td>
                            <td>@obj.Author</td>
                            <td>@obj.ListPrice</td>
                            <td>@obj.Category.Name</td>
                            <td>
                                <div class="w-75 btn-group" role="group">
                                    <a asp-controller="Product" asp-action="UpsertProduct" asp-route-id="@obj.ProductId" class="btn btn-primary mx-2">
                                        <i class="bi bi-pencil-square"></i>Edit
                                    </a>
                                    <a asp-controller="Product" asp-action="RemoveProduct" asp-route-id="@obj.ProductId" class="btn btn-danger mx-2">
                                        <i class="bi bi-trash-fill"></i>Delete
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts{

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script>
        $(document).ready(function () {
            $("#myInput").on("keyup", function () {
                var value = $(this).val().toLowerCase();
                $("#myTable tr").filter(function () {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
                });
            });
        });
    </script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            $('.sortable').click(function () {
                var table = $(this).parents('table').eq(0);
                var rows = table.find('tbody tr').toArray().sort(compare($(this).data('sort')));
                this.asc = !this.asc;
                if (!this.asc) rows = rows.reverse();
                table.children('tbody').empty().html(rows);

                $('.sortable').removeClass('asc desc');
                $(this).addClass(this.asc ? 'asc' : 'desc');
            });

            function compare(index) {
                return function (a, b) {
                    var valA = getCellValue(a, index), valB = getCellValue(b, index);
                    return $.isNumeric(valA) && $.isNumeric(valB) ? valA - valB : valA.localeCompare(valB);
                };
            }

            function getCellValue(row, index) {
                return $(row).children('td').eq(index).text();
            }
        });
    </script>
}

